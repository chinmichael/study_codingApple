1. Javascript 사용 목적

>> 가장 기본적인 이유는 웹환경에서 HTML의 조작 >> HTML과 CSS만으로는 안 되거나 힘든 UI 생성

ex) 기본적인 사용 예시
document.getElementById('hello').innterHTML = '<div><h4>Hello</h4></div>';

> document.getElementById() : 셀렉터 파트 : 문서(웹문서,html)의 요소(element = HTML요소)를 ID를 기준으로 가져옴
> innerHTML : 해당 element 안의 HTML이나 XML을 가져옴
> innerText : 해당 element 안의 text 값을 가져옴

document.getElementById('hello').style.fontSize = '30px';

> 이런식으로 CSS 스타일 조작도 가할 수 있다

cf) 셀렉터 종류 예시

getElementBy + Id, ClassName, TagName
주의할 점은 ClassName의 경우 해당 Class셀렉터를 다 찾는데 이때 전체 선택은 불가능하고
getElementsByClassName()[index]로 위에서 부터 순서대로 하나씩 적용해나가야함


2. EventListner

HTML에서 태그 내 onclick="실행할JS" 어트리뷰트로 해당 이벤트에 대해 JS를 실행시킬 수 있다.
보통 onclick="함수명(파라미터)"로 함수를 만들어 축약 (리액트의 onClick={함수명 or ()=>{함수명(파라미터)}}와 주의) 

document.getElement셀렉터 + .addEventListener('event', callback)을 이용하면,
HTML 태그에 굳이 onclick어트리뷰트를 넣거나 혹은 직접 넣을 수 없을 때도 이벤트를 넣을 수 있음

'event'의 종류는 click, keydown, scroll, mouseover 등 다양하다

cf) 이런 이벤트를 사용하면 여러 숨김UI(modal,tab,alert 등) 등이 제작이 가능하다
    > UI 제작 팁 : 미리 디자인을 제작하고 display:none 등으로 숨긴 뒤 > 이벤트 시에 해당상태를 변경시켜 보여준다

cf) Function | Parameter 사용 이유 >> 코드를 축약 + 메모리 재할당 최소화 | 함수의 수행가능 기능 늘림 > 축약


============================================================================================
============================================================================================

1. jQuery 라이브러리 (React, Vue 등의 프레임워크 등장 전까지 필수 라이브러리)

>JS 코드양을 효율적, 획기적으로 줄일 수 있는 라이브러리였음

>getElementByClassName와 달리 $('클래스셀렉터'). 으로 해당 클래스 전체 선택이 가능하며
$('클래스셀렉터').eq(index).로 기존처럼 부분 선택도 가능함

>이벤트 리스너도 $('셀렉터').on('이벤트', callback) 말고도 $('셀렉터').on('이벤트', 'element', callback)
으로 해당 셀렉터에 해당하는 HTML 요소 중 트리거가 되는 세부 element를 지정할 수 있다

>hide(), show() | slideUp(), slideDown | fadeIn(), fadeOut()  등 기본적인 애니메이션 지원을 쉽게 해줌

>addClass(), removeClass()로 애니메이션에 가장 중요한 클래스 붙이기가 쉽게 가능함


2. jQuery 라이브러리 설치

HTML body 하단, 그리고 jQuery를 사용할 스크립트 상단에
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
CDN(Content Delivery Network)을 첨부한다. 혹은 해당 src 링크로 들어가 파일을 다운로드해 경로 첨부

버전은 보통 3.X버전을 이용하고 e8이하 호환성만 1.X를 이용한다

참고로 버전은 uncompressed(그냥 원본) minified(공백제거해 압축버전) slim이 있다


참고로 HTML은 위에서 아래로 코드를 읽어나가며 JS같은 읽기시간이 걸리거나 외부파일을 가져와 읽기를 멈추는 걸 고려할 때
스크립트들은 body 하단의 위치하는 것이 좋다 (HTML 요소를 보여주는 것보다 조작이 후순위기에)


3. 기본적인 jQuery 셀렉터 사용

$변수 = $('셀렉터'). + text(), html(), css(), val(), attr('세부프로퍼티', '변경속성값') 등을 이용
해당 element 함수는 파라미터가 있으면 (css의 경우 css('color', 'red')이런식) 해당 요소에 값을 넣고 파라미터가 없으면 해당 요소를 가져온다.

참고로 $('셀렉터').addClass('추가클래스'); $('셀렉터').removeClass('삭제클래스'); 도 자주 사용 


============================================================================================
============================================================================================

1. if-else 조건문

JS의 if 조건문 bool연산도 JAVA와 거의 같다

단지 느슨한 비교(==))과 엄격한 비교(===)가 있는데 JS에서 ==는 타입 자동변환에 의해 내용일치를 확인하고 ===는 타입까지 같은지 확인한다.
참고로 브라우저 콘솔에 조건식을 입력하면 true, false를 확인할 수 있다. 


2. toggle 이벤트 > 이벤트마다 해당 UI를 껐다 키는 것을 반복하는 것 > if문을 이용하는데
   jQuery의 경우 toggle(), fadeToggle(), slideToggle() 함수가 있어서 간단히 구현이 가능하다


============================================================================================
============================================================================================

1. 자주 사용되는 form 관련 이벤트

form : submit : form 태그의 action어트리뷰트로 지정된 곳으로 제출, 제출이 정상 실행되면 새로고침이 일어난다.

$('폼요소셀렉터').on('submit', e => {
        e.preventDefault(); // 이렇게 하면 프로젝트 개발 중 폼을 전송을 막을 수 있다
})

input   : change : input 태그의 value가 바뀌고 동시에 focus를 잃었을 때 실행된다
        : input : input의 value가 변경될 때마다 실행된다.

리액트나 뷰의 경우 onChange나 onInput이나 value가 변경될 때마다 실행된다.

============================================================================================
============================================================================================

css 추가 팁

z-index 속성 : 위치지정요소(position 속성이 들어간 요소)와 그 하위 요소, 플랙스 아이템의 z축 순서를 지정하며
               클수록 앞으로 나가는데 Bootstrap은 모든 요소가 1~4를 쓰기에 5를 쓰면 가장 앞으로 나간다

visibility: hidden;의 경우 UI 자국이 남으므로 UI를 숨길때는 그냥 display: none;을 사용하자

display: flex;에서
justify-content: space-between;을 사용하면 요소간 가운데 간격을 제공해준다
align-items: center;을 하면 세로 정렬도 가능


============================================================================================
============================================================================================

문자열 substring()
Java와 거의 같다 문자열변수.substring(startIndex, endIndex)로 하면 되며 endIndex내용은 포함이 되지 않는다
참고로 substr()도 있는데 이는 문자열변수.substr(startIndex, 범위 length)로 지정한다.

우선 빠른 메모고 차차 추가 및 정리해나갈 예정
